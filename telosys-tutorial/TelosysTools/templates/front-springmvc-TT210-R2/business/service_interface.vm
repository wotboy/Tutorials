/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
package ${target.javaPackageFromFolder(${SRC})};

import java.util.List;

import ${ENTITY_PKG}.${entity.name};

/**
 * Business Service Interface for entity ${entity.name}.
 */
public interface ${entity.name}Service { 

	/**
	 * Loads an entity from the database using its Primary Key
#foreach( $attribute in $entity.keyAttributes )
	 * @param $attribute.name
#end
	 * @return entity
	 */
	${entity.name} findById( $fn.argumentsListWithType($entity.keyAttributes)  ) ;

	/**
	 * Loads all entities.
	 * @return all entities
	 */
	List<${entity.name}> findAll();

	/**
	 * Saves the given entity in the database (create or update)
	 * @param entity
	 * @return entity
	 */
	${entity.name} save(${entity.name} entity);

	/**
	 * Updates the given entity in the database
	 * @param entity
	 * @return
	 */
	${entity.name} update(${entity.name} entity);

	/**
	 * Creates the given entity in the database
	 * @param entity
	 * @return
	 */
	${entity.name} create(${entity.name} entity);

	/**
	 * Deletes an entity using its Primary Key
#foreach( $attribute in $entity.keyAttributes )
	 * @param $attribute.name
#end
	 */
	void delete( $fn.argumentsListWithType($entity.keyAttributes) );

## -------------------------------------------------------------
#*
	/**
	 * Load entity
	 * @param id
	 * @return entity
	 */
	// $fn.argumentsListWithType($entity.keyAttributes)
	${entity.name} findById( $fn.argumentsListWithType($entity.keyAttributes) ) ;

	/**
	 * Load all entities.
	 * @return all entities
	 */
	List<${entity.name}> findAll();

	/**
	 * Load entities
	 * @param pageable Pagination
	 * @return entities
	 */
	//public Page<${entity.name}> findAllByPage(Pageable pageable);

	/**
	 * Save entity
	 * @param entity
	 * @return entity
	 */
	${entity.name} save( ${entity.name} entity);

	/**
	 * Delete entity
	 * @param id
	 */
	void delete( $fn.argumentsListWithType($entity.keyAttributes) );
*#
}
