/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
##--------------------------------------------------------------------------------------------------------
## Key fields = fields in Primary Key    
#set( $keyFields = $entity.getAttributesByCriteria( $const.KEY ) )
##--------------------------------------------------------------------------------------------------------
## Data fields = fields not in Primary Key and not in selected Links    
## #set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY ) )
##--------------------------------------------------------------------------------------------------------
## Link fields = fields not in Primary Key and used as FK in selected Links    
#set( $fieldsLink = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.IN_SELECTED_LINKS ) )
##--------------------------------------------------------------------------------------------------------
## Mapped fields = fields in Primary Key or not in selected Links    
#set( $allMappedFields = $fn.concatLists($entity.keyAttributes, $dataFields) )
##--------------------------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder($SRC)};

import java.io.Serializable;

import javax.validation.constraints.*;

#foreach( $import in $java.imports($entity.attributes) )
import $import;
#end

public class $entity.name implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
$beanValidation.annotations(4,$field)
    private $field.formattedType(0) $field.formattedName(0)#if($field.hasInitialValue()) = ${field.initialValue} #end;
#end

    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
#foreach( $field in $dataFields )
$beanValidation.annotations(4,$field)
    private $field.formattedType(0) $field.formattedName(0)#if($field.hasInitialValue()) = ${field.initialValue} #end;

#end

#*
    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
#foreach( $link in $entity.selectedLinks )
    private $link.formattedType(0) $link.formattedName(0);

#end
*#
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
#if ( $field.setter )
    public void ${field.setter}( $field.formattedType(0) $field.name ) {
        this.$field.name = $field.name ;
    }

#end
#if ( $field.getter )
    public $field.formattedType(0) ${field.getter}() {
        return this.$field.name;
    }

#end
#end

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
#foreach( $field in $dataFields )
#if ( $field.setter )
    public void ${field.setter}( $field.formattedType(0) $field.name ) {
        this.$field.name = $field.name;
    }
#end
#if ( $field.getter )
    public $field.formattedType(0) ${field.getter}() {
        return this.$field.name;
    }
#end

#end  

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
 
    $java.toStringMethod($entity, 4)

}
